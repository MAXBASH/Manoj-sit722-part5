name: Deploy microservice

on:
  #
  # Deploys the microservice on push to the main branch of this code repository.
  #
  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    env:
      VERSION: 1
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN  }}
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build
        run: ./scripts/build-image.sh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.6"

      - name: Change to Terraform Scripts Directory
        run: cd terraform_scripts

      - name: Terraform Initialize
        run: terraform init
        working-directory: ./terraform_scripts

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform_scripts

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform_scripts

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Publish
        run: ./scripts/push-image.sh
     
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.CLUSTER_NAME }}
      
      - name: Install kubectl
        run: sudo az aks install-cli
      
      - name: Deploy
        run: ./scripts/deploy.sh
